[gd_resource type="ShaderMaterial" load_steps=15 format=2]

[sub_resource type="VisualShaderNodeScalarFunc" id=1]
function = 0

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=4]

[sub_resource type="VisualShaderNodeScalarOp" id=5]

[sub_resource type="VisualShaderNodeScalarOp" id=6]

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 0.0, 1, 6.28319 ]
operator = 4

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=11]

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorCompose" id=13]

[sub_resource type="VisualShader" id=14]
code = "shader_type spatial;



void vertex() {
// Input:6
	vec3 n_out6p0 = VERTEX;

// Input:11
	vec3 n_out11p0 = VERTEX;

// VectorDecompose:12
	float n_out12p0 = n_out11p0.x;
	float n_out12p1 = n_out11p0.y;
	float n_out12p2 = n_out11p0.z;

// ScalarOp:13
	float n_out13p0 = n_out12p0 + n_out12p1;

// ScalarOp:14
	float n_out14p0 = n_out13p0 + n_out12p2;

// ScalarOp:16
	float n_in16p1 = 4.00000;
	float n_out16p0 = n_out14p0 * n_in16p1;

// Input:2
	float n_out2p0 = TIME;

// ScalarOp:15
	float n_out15p0 = n_out16p0 + n_out2p0;

// ScalarOp:3
	float n_in3p1 = 6.28319;
	float n_out3p0 = mod(n_out15p0, n_in3p1);

// ScalarFunc:10
	float n_out10p0 = sin(n_out3p0);

// ScalarOp:4
	float n_in4p1 = 0.05000;
	float n_out4p0 = n_out10p0 * n_in4p1;

// VectorCompose:7
	vec3 n_out7p0 = vec3(n_out4p0, n_out4p0, n_out4p0);

// VectorOp:5
	vec3 n_out5p0 = n_out6p0 + n_out7p0;

// Output:0
	VERTEX = n_out5p0;

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -138.142, 89 )
nodes/vertex/2/node = SubResource( 8 )
nodes/vertex/2/position = Vector2( -1160, 360 )
nodes/vertex/3/node = SubResource( 9 )
nodes/vertex/3/position = Vector2( -820, 340 )
nodes/vertex/4/node = SubResource( 10 )
nodes/vertex/4/position = Vector2( -460, 320 )
nodes/vertex/5/node = SubResource( 11 )
nodes/vertex/5/position = Vector2( 220, 160 )
nodes/vertex/6/node = SubResource( 12 )
nodes/vertex/6/position = Vector2( -80, 140 )
nodes/vertex/7/node = SubResource( 13 )
nodes/vertex/7/position = Vector2( -260, 320 )
nodes/vertex/10/node = SubResource( 1 )
nodes/vertex/10/position = Vector2( -640, 360 )
nodes/vertex/11/node = SubResource( 2 )
nodes/vertex/11/position = Vector2( -2100, 200 )
nodes/vertex/12/node = SubResource( 3 )
nodes/vertex/12/position = Vector2( -1920, 200 )
nodes/vertex/13/node = SubResource( 4 )
nodes/vertex/13/position = Vector2( -1700, 160 )
nodes/vertex/14/node = SubResource( 5 )
nodes/vertex/14/position = Vector2( -1480, 200 )
nodes/vertex/15/node = SubResource( 6 )
nodes/vertex/15/position = Vector2( -1000, 320 )
nodes/vertex/16/node = SubResource( 7 )
nodes/vertex/16/position = Vector2( -1300, 180 )
nodes/vertex/connections = PoolIntArray( 4, 0, 7, 0, 4, 0, 7, 1, 4, 0, 7, 2, 6, 0, 5, 0, 5, 0, 0, 0, 3, 0, 10, 0, 10, 0, 4, 0, 7, 0, 5, 1, 11, 0, 12, 0, 12, 0, 13, 0, 12, 1, 13, 1, 12, 2, 14, 1, 13, 0, 14, 0, 2, 0, 15, 1, 15, 0, 3, 0, 14, 0, 16, 0, 16, 0, 15, 0 )

[resource]
shader = SubResource( 14 )
